"""
Bot command handlers
"""
import logging
from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message

from bot.filters import IsAdmin
from config import settings

logger = logging.getLogger(__name__)

# Create router for handlers
router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message) -> None:
    """
    Handler for /start command
    
    Args:
        message: Incoming message
    """
    logger.info(f"User {message.from_user.id} started the bot")
    
    # Check if user is admin
    is_admin = message.from_user.id in settings.ADMIN_CHAT_IDS
    
    if is_admin:
        await message.answer(
            "‚úÖ <b>–ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
            "–¢–µ–ø–µ—Ä—å –±–æ—Ç –Ω–∞—á–Ω—ë—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ª–æ—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö.\n\n"
            "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
            "/status - –°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
            "/help - –ü–æ–º–æ—â—å",
            parse_mode='HTML'
        )
    else:
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.",
            parse_mode='HTML'
        )


@router.message(Command("status"), IsAdmin())
async def cmd_status(message: Message) -> None:
    """
    Handler for /status command (admin only)
    
    Args:
        message: Incoming message
    """
    logger.info(f"Admin {message.from_user.id} requested status")
    
    status_text = (
        "üìä <b>–°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</b>\n\n"
        f"‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {settings.CHECK_INTERVAL_MINUTES} –º–∏–Ω—É—Ç\n"
        f"üîó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ URL: {len(settings.MONITOR_URLS)}\n"
        f"üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–¥–º–∏–Ω–æ–≤: {len(settings.ADMIN_CHAT_IDS)}\n\n"
        "<b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ URL:</b>\n"
    )
    
    for i, url in enumerate(settings.MONITOR_URLS, 1):
        status_text += f"{i}. {url}\n"
    
    await message.answer(status_text, parse_mode='HTML')


@router.message(Command("help"), IsAdmin())
async def cmd_help(message: Message) -> None:
    """
    Handler for /help command (admin only)
    
    Args:
        message: Incoming message
    """
    logger.info(f"Admin {message.from_user.id} requested help")
    
    help_text = (
        "üìñ <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ URL –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è "
        "–æ –Ω–æ–≤—ã—Ö –ª–æ—Ç–∞—Ö –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.\n\n"
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/status - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "üí° –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –ª–æ—Ç—ã "
        f"–∫–∞–∂–¥—ã–µ {settings.CHECK_INTERVAL_MINUTES} –º–∏–Ω—É—Ç."
    )
    
    await message.answer(help_text, parse_mode='HTML')

